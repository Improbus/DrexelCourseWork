Dan DeCamillo
10-20-07
Chapter 1 Book Exercises

Exercise 1-1:

The variable names are defined as 0 and 1 for true and false but later when
used in the program the numbers are disregarded and the True and False
statements are used.  This shows inconsistency in the program.  There are
also undefined and undesriptive variables like not_eof in the program.

Exercise 1-2:

int make_smaller(char *s, char *t){
	if (string_composition(s, t) <1)
		return 1;
	else
		return 0;
}

To make this program better the implementation of better variable and
function names were implemented.

Exercise 1-3:

When reading the code aloud it does not make logical sense therefore the
variable names and function names are not well written.

Exercise 1-4:

if( (c != y || Y) )
	return;

if(length < BUFSIZE)
	length = length;
else 
	length = BUFSIZE;

if(flag == 0)
	return 1;

if (*line == '"')
	quote = 1;
else
	quote = 0;

bit = (val&1)?1:0;

Exercise 1-5:

With the first excerpt the asterix is missing from the call to scanf for the
ip argument therefore there will be an error.

The first excerpt should read:
insert(graph(&vert));
insert(read(&val));
insert(read(&ch));

Exercise 1-6:

The output could range from 2 2 or 1 1 or even 4 4 depending on how the
compiler takes the numbers from the command line.

if(istty(stdin))
else if (istty(stdout))
else if (istty(stderr))
else
	return 0;

if(retval != SUCCESS)
	return retval;
else
	return SUCCESS;

for( int k=0; k<5; k++)
{
	int x += dx;
	scanf("%lf", &dx);
}

Exercise 1-8:

for( int count=0; count < total ; count++)
{
	if ( this.getName(count) == nametable.userName() ) 
	{
		return true;
	}
}

Exercise 1-9:

The macro definition has reuse of the same variable which could cause a
value to be recalculated more than once.  The logical operators are written
in short hand form therefore causing confusion when executed outside of the
macro's constraints.  Overall this macro definition causes more confusion
than it does help and it would be easier to do the calculation in a normal
manner.

Exercise 1-10:

enum {
	FT2METER = 0.3048
	METER2FT = 3.28084
	MI2FT = 5280.0
	MI2KM = 1.609344
	SQMI2SQKM = 2.589988
};

Exercise 1-11:

The comment in the first example is just stating the obvious and is not
needed.

This comment contradicts the code that it refers to therefore making the
comment useless.

In the final example most of the comments are either not descriptive enough
or are not needed to explain the code.


	
